apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
      - name: user-service
        image: user-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3002
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3002"
        - name: INSTANCE_ID
          value: "user-service"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "store_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "postgres123"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: user-service
  labels:
    app: user-service
spec:
  selector:
    app: user-service
  ports:
  - port: 3002
    targetPort: 3002
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-service
  labels:
    app: store-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-service
  template:
    metadata:
      labels:
        app: store-service
    spec:
      containers:
      - name: store-service
        image: store-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3003
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3003"
        - name: INSTANCE_ID
          value: "store-service"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "store_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "postgres123"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: store-service
  labels:
    app: store-service
spec:
  selector:
    app: store-service
  ports:
  - port: 3003
    targetPort: 3003
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sales-service
  labels:
    app: sales-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sales-service
  template:
    metadata:
      labels:
        app: sales-service
    spec:
      containers:
      - name: sales-service
        image: sales-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3005
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3005"
        - name: INSTANCE_ID
          value: "sales-service"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "store_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "postgres123"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: sales-service
  labels:
    app: sales-service
spec:
  selector:
    app: sales-service
  ports:
  - port: 3005
    targetPort: 3005
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: refund-service
  labels:
    app: refund-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: refund-service
  template:
    metadata:
      labels:
        app: refund-service
    spec:
      containers:
      - name: refund-service
        image: refund-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3006
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3006"
        - name: INSTANCE_ID
          value: "refund-service"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "store_db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "postgres123"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 3006
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: refund-service
  labels:
    app: refund-service
spec:
  selector:
    app: refund-service
  ports:
  - port: 3006
    targetPort: 3006
  type: ClusterIP
