@startuml Diagramme de deploiement
title Diagramme de deploiement â€” Architecture Kubernetes & Monitoring

node "Client Browser" {
  artifact "React App" as ReactApp
  artifact "Cart Context"
  artifact "User Context"
  artifact "API Client"
}

cloud "Kubernetes Cluster" {
  node "Frontend Pod" {
    node "Nginx Container" {
      artifact "Static Files"
      artifact "Vite Build"
    }
  }
  
  node "Backend Pod(s)" {
    node "Node.js Container" {
      artifact "Express Server"
      artifact "Controllers"
      artifact "Services"
      artifact "Middleware"
      artifact "Prisma Client"
    }
  }
  
  node "Database Pod" {
    database "PostgreSQL" as DB {
      artifact "Store Tables"
      artifact "Product Tables"
      artifact "User Tables"
      artifact "Stock Tables"
      artifact "Sale Tables"
      artifact "Refund Tables"
    }
  }
  
  node "Cache Pod" {
    database "Redis" {
      artifact "API Cache"
      artifact "Session Data"
    }
  }
  
  node "Monitoring Pod" {
    node "Prometheus Container" {
      artifact "Metrics Collection"
    }
    node "Grafana Container" {
      artifact "Dashboards"
      artifact "Visualization"
    }
  }
}

node "Load Testing Environment" {
  artifact "K6 Tests"
}

' Connections
ReactApp --> "Express Server" : HTTPS/REST API
"Express Server" --> "Controllers"
"Controllers" --> "Services"
"Services" --> "Prisma Client"
"Prisma Client" --> DB
"Middleware" --> "API Cache" : caching
"Express Server" --> "Metrics Collection" : metrics
"Metrics Collection" --> "Dashboards" : data
"K6 Tests" --> "Express Server" : load testing

@enduml
